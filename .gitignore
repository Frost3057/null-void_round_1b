# Adobe Hackathon 2025 - Multilingual Document Intelligence System
# Comprehensive .gitignore file

# ========================
# Python
# ========================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ========================
# Machine Learning / Data Science
# ========================

# Model files
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.safetensors

# Large datasets
*.csv
*.tsv
*.parquet
*.feather

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# MLflow
mlruns/
mlartifacts/

# Weights & Biases
wandb/

# TensorBoard logs
logs/
tensorboard_logs/

# ========================
# Docker
# ========================

# Docker build context (if needed to be ignored)
.dockerignore

# Docker volumes
docker_volumes/

# ========================
# IDE / Editor
# ========================

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-workspace
*.sublime-project

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ========================
# Operating System
# ========================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ========================
# Project Specific
# ========================

# Output directories
output/
output_1A/
output_1B/
results/
temp/
tmp/

# Configuration files with sensitive data
config.json
secrets.json
.secrets
credentials.json

# Large input files (keep structure but not actual files)
input_1A/*.pdf
input_1B/*.pdf
!input_1A/.gitkeep
!input_1B/.gitkeep

# Model files and downloads
multilingual_model/
models/
downloads/
*.model
*.bin

# Generated reports
*.report.json
*_report.json
*_report.html
*_validation_report.json
evaluation_report.json
multilingual_validation_report.json

# Logs
*.log
logs/
log/

# Backup files
*.bak
*.backup
*.orig

# Temporary processing files
*.tmp
*.temp
processing_temp/

# PDF processing cache
.pdf_cache/
pdf_cache/

# Test files
test_output/
test_results/

# Benchmark files
benchmark_results/
performance_logs/

# ========================
# Package Managers
# ========================

# npm
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Conda
.conda/

# ========================
# Security
# ========================

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# API keys and secrets
api_keys.txt
*.pem
*.key
*.crt

# ========================
# Miscellaneous
# ========================

# Compressed files
*.zip
*.tar.gz
*.rar
*.7z

# Documentation builds
_build/
.doctrees/

# Profiling
*.prof

# Database
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
cache/

# Runtime files
*.pid
*.sock

# ========================
# Keep these files
# ========================

# Keep directory structure
!.gitkeep

# Keep important configuration templates
!config/template_*
!config/example_*

# Keep sample data (small files only)
!samples/
!examples/

# Keep documentation assets
!docs/images/
!docs/assets/

# Keep requirements files
!requirements*.txt
!Pipfile
!pyproject.toml
!setup.py
!setup.cfg

# Keep Docker files
!Dockerfile*
!docker-compose*.yml
!.dockerignore

# Keep GitHub workflows
!.github/

# Keep LICENSE and README
!LICENSE*
!README*
!CHANGELOG*
!CONTRIBUTING*
!CODE_OF_CONDUCT*

# Keep package configuration
!package.json
!tsconfig.json
!babel.config.js
!webpack.config.js
